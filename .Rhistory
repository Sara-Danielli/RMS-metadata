library(data.table)
library(tidyverse)
library(clusterProfiler)
library(ggpubr)
library(cowplot)
library(enrichplot)
library(msigdbr)
library(readxl)
library(org.Hs.eg.db)
# Organize environment  -----------------------------------
# base directory
base_dir <- file.path('/Volumes/Sara_PhD/scRNAseq_data')
# Create directories to store results
plot_dir <- file.path(base_dir, "output/metadata/Patel_Danielli_Langenau/RPCA_name/Pseudobulk")
if (!dir.exists(plot_dir)){dir.create(plot_dir, recursive = T)}
# script directory
script_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata')
# Create directories to store results
plot_dir <- file.path(base_dir, "output/metadata/Patel_Danielli_Langenau/RPCA_name/Pseudobulk")
if (!dir.exists(plot_dir)){dir.create(plot_dir, recursive = T)}
resource_dir <- file.path(base_dir, 'scripts/Resources')
#source(file.path(resource_dir, "Color_palette.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
resource_dir <- file.path(script_dir, 'Resources')
#source(file.path(resource_dir, "Color_palette.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
# load Seurat object -----------------------------------
P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
head(P3F1@meta.data)
Idents(P3F1) <- 'Cluster assignment'
metaprograms <- unique(P3F1$Cluster assignment)
metaprograms <- unique(P3F1$`Cluster assignment`)
metaprograms
# Order factors
desired_order <- ('Progenitor', 'Proliferative', 'Ground', 'Differentiated', 'Neuronal', 'Apoptosis')
metaprograms <- metaprograms[match(desired_order, metaprograms)]
# Order factors
desired_order <- c('Progenitor', 'Proliferative', 'Ground', 'Differentiated', 'Neuronal', 'Apoptosis')
metaprograms <- metaprograms[match(desired_order, metaprograms)]
head(P3F1@meta.data)
# First identify markers differentially expressed across clusters
Idents(seurat_obj) <- 'status'
# First identify markers differentially expressed across clusters
Idents(P3F1) <- 'status'
Idents(P3F1)
# load Seurat object -----------------------------------
#P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
#P7F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX7FOXO1_final_20240130.rds"))
ERMS <- readRDS(file.path(base_dir, "write/FNRMS_final_20240130.rds"))
Idents(ERMS) <- 'Cluster assignment'
metaprograms <- unique(ERMS$`Cluster assignment`)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(readxl)
library(writexl)
library(data.table)
library(viridis)
library(future)
library(paletteer)
library(SeuratObject)
library(SCpubr)
library(readxl)
library(ggpubr)
library(cowplot)
base_dir <- '/Volumes/Sara_PhD/scRNAseq_data'
resource_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources')
source(file.path(base_dir, "codes/MANUSCRIPT_INTEGRATION/metadata/FINAL/Functions.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
genelist_dir <- file.path(base_dir, 'list_final')
analysis_dir <- file.path(base_dir, 'output/metadata/Patel_Danielli_Langenau/RPCA_name/P3F1analysis')
if (!dir.exists(analysis_dir)){dir.create(analysis_dir, recursive = T)}
P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
# read gene list (Fusion positive signature of Wei et al)
FP_signature <- read_excel(file.path(base_dir, 'list_final/Wei_2022/FP.xlsx'), col_names = F)
FP_signature <- as.list(FP_signature)
names(FP_signature) <- 'FP-RMS signature (Wei et al)'
# read gene list (Fusion positive signature of Gryder et al 2020)
FP_target_signature <- read_excel(file.path(base_dir, 'list_final/Berkley_Gryder_P3F1_target_genes.xlsx'), col_names = F)
FP_target_signature <- as.list(FP_target_signature)
names(FP_target_signature) <- 'PAX3::FOXO1 targets (Gryder et al)'
# combine lists
FP_genes <- c(FP_signature, FP_target_signature)
# Score tumor programs for gene expression programs identified in Xi et al. --------------------
P3F1 <- AddModuleScore(object = P3F1, assay = 'RNA', features = FP_genes, name = names(FP_genes))
P3F1 <- ScaleData(P3F1)
# rename metadata names of scores
col_start <- length(colnames(P3F1@meta.data)) - length(names(FP_genes)) + 1
# identify number of last column with metadata scores
col_end <- length(colnames(P3F1@meta.data))
# rename columns with score name
colnames(P3F1@meta.data)[col_start:col_end] <- names(FP_genes)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'FP_target_signature',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
scale.min = 100,
scale.max = 100,
dot.scale=10,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
colnames(P3F1@meta.data)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
scale.min = 100,
scale.max = 100,
dot.scale=10,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
?DotPlot
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 1
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 3
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = T,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 3
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = T,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 1
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = T,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 0.3
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = T,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 0.1
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = T,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 0.01
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = T,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
#col.max = 0.01
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
#col.max = 0.01
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 0.25
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Dotplot scores of FP signature ------------------------------------------
DotPlot(P3F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("grey", "red3"),
scale = F,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 0.25
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("23_DotPlot_FPsignature.pdf")), width=4.5, height=6.5, dpi=300)
ggsave(file.path(analysis_dir, paste0("23_DotPlot_FPsignature.pdf")), width=3.5, height=6.5, dpi=300)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(readxl)
library(writexl)
library(data.table)
library(viridis)
library(future)
library(paletteer)
library(SeuratObject)
library(SCpubr)
library(readxl)
base_dir <- '/Volumes/Sara_PhD/scRNAseq_data'
resource_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources')
source(file.path(base_dir, "codes/MANUSCRIPT_INTEGRATION/metadata/FINAL/Functions.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
genelist_dir <- file.path(base_dir, 'list_final')
analysis_dir <- file.path(base_dir, 'output/metadata/Patel_Danielli_Langenau/RPCA_name/P7F1analysis')
if (!dir.exists(analysis_dir)){dir.create(analysis_dir, recursive = T)}
## read file
P7F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX7FOXO1_final_20240130.rds"))
# Scoring tumors for FP-RMS signature ------------------------------------------------
# read gene list (Fusion positive signature of Wei et al)
FP_signature <- read_excel(file.path(base_dir, 'list_final/Wei_2022/FP.xlsx'), col_names = F)
FP_signature <- as.list(FP_signature)
names(FP_signature) <- 'FP-RMS signature (Wei et al)'
# read gene list (Fusion positive signature of Gryder et al 2020)
FP_target_signature <- read_excel(file.path(base_dir, 'list_final/Berkley_Gryder_P3F1_target_genes.xlsx'), col_names = F)
FP_target_signature <- as.list(FP_target_signature)
names(FP_target_signature) <- 'PAX3::FOXO1 targets (Gryder et al)'
# combine lists
FP_genes <- c(FP_signature, FP_target_signature)
# Score tumor programs for gene expression programs identified in Xi et al. --------------------
P7F1 <- AddModuleScore(object = P7F1, assay = 'RNA', features = FP_genes, name = names(FP_genes))
P7F1 <- ScaleData(P7F1)
# rename metadata names of scores
col_start <- length(colnames(P7F1@meta.data)) - length(names(FP_genes)) + 1
# identify number of last column with metadata scores
col_end <- length(colnames(P7F1@meta.data))
# rename columns with score name
colnames(P7F1@meta.data)[col_start:col_end] <- names(FP_genes)
# Dotplot scores of FP signature
DotPlot(P7F1,
features = 'PAX3::FOXO1 targets (Gryder et al)',
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("grey", "red3"),
scale = F,
scale.min = 100,
scale.max = 100,
dot.scale=10,
col.min = 0,
col.max = 0.25
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("23_DotPlot_FPsignature.pdf")), width=3.5, height=6, dpi=300)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(readxl)
library(writexl)
library(data.table)
library(viridis)
library(future)
library(paletteer)
library(SeuratObject)
library(SCpubr)
library(readxl)
library(ggpubr)
library(cowplot)
base_dir <- '/Volumes/Sara_PhD/scRNAseq_data'
resource_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources')
source(file.path(base_dir, "codes/MANUSCRIPT_INTEGRATION/metadata/FINAL/Functions.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
genelist_dir <- file.path(base_dir, 'list_final')
analysis_dir <- file.path(base_dir, 'output/metadata/Patel_Danielli_Langenau/RPCA_name/ERMSanalysis')
if (!dir.exists(analysis_dir)){dir.create(analysis_dir, recursive = T)}
## read file
FNRMS <- readRDS(file.path(base_dir, "write/FNRMS_final_20240130.rds"))
# Dotplot scores
DotPlot(FNRMS,
features = c('OGN', 'THY1', 'POSTN'),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = FALSE,
col.min = 0)  +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("21_DotPlot_scores_Skm_Mesen_markers.pdf")), width=5.5, height=4.5, dpi=300)
# Dotplot scores
DotPlot(FNRMS,
features = c('OGN', 'THY1', 'POSTN'),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("grey", "red3"),
scale = FALSE,
col.min = 0)  +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("21_DotPlot_scores_Skm_Mesen_markers.pdf")), width=5.5, height=4.5, dpi=300)
# Dotplot scores
DotPlot(FNRMS,
features = c('OGN', 'THY1', 'POSTN'),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("grey90", "red3"),
scale = FALSE,
col.min = 0)  +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("21_DotPlot_scores_Skm_Mesen_markers.pdf")), width=5.5, height=4.5, dpi=300)
ggsave(file.path(analysis_dir, paste0("21_DotPlot_scores_Skm_Mesen_markers.pdf")), width=4, height=4.5, dpi=300)
ggsave(file.path(analysis_dir, paste0("21_DotPlot_scores_Skm_Mesen_markers.pdf")), width=4, height=4, dpi=300)
