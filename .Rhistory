row_split = factor(c(genes_df$Group),
levels = c('Progenitor', 'Proliferative', 'Ground', 'Differentiated', 'Neuronal', 'Apoptosis')),
#top_annotation = column_ha,
right_annotation = right_ha,
use_raster = TRUE,
raster_quality = 10,
cluster_rows = FALSE,
col = col_fun
)
draw(ht)
dev.off()
# plot heatmap
Cairo::CairoPDF(file.path(plot_dir, "1_P3F1_heatmap_aggregate_all.pdf"), width=5, height=6)
ht <- Heatmap(seurat_df,
cluster_columns = FALSE,
show_row_names = FALSE,
show_column_names = FALSE,
#bottom_annotation = bottom_ha,
border = TRUE,
row_split = factor(c(genes_df$Group),
levels = c('Progenitor', 'Proliferative', 'Ground', 'Differentiated', 'Neuronal', 'Apoptosis')),
#top_annotation = column_ha,
right_annotation = right_ha,
use_raster = TRUE,
raster_quality = 10,
cluster_rows = FALSE,
col = col_fun
)
draw(ht)
dev.off()
# load Seurat object -----------------------------------
P7F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX7FOXO1_final_20240130.rds"))
# rename subtype
metadata <- P7F1@meta.data
# save metadata as df
metadata <- data.frame(P7F1@meta.data)
# aggregate cells from same cluster -----------------------------------
Idents(P7F1) <- 'Cluster assignment'
P7F1 <- AggregateExpression(P7F1, return.seurat = TRUE)
# load gene lists -----------------------------------
markers <- read.csv(file.path(genelist_dir, 'P7F1_cluster_markers.csv'))
# rename DNA replication as Proliferative
markers <- markers %>%
mutate_all(~ ifelse(. == 'DNA replication', 'Proliferative', .))
# order by Annotation and fold change
markers <- markers %>% arrange(cluster, desc(avg_log2FC))
markers <- as.data.frame(markers)
# convert into list
marker_list <- split(markers[, -c(1:7)], f = markers$cluster)
# Remove duplicates and keep only one occurrence of each element
# Remove duplicates within each vector
marker_list <- lapply(marker_list, unique)
# select top 10 genes per cluster
marker_list <- lapply(marker_list,head,100)
# load gene lists -----------------------------------
markers <- read.csv(file.path(genelist_dir, 'P7F1_cluster_markers.csv'))
# rename DNA replication as Proliferative
markers <- markers %>%
mutate_all(~ ifelse(. == 'DNA replication', 'Proliferative', .))
# order by Annotation and fold change
markers <- markers %>% arrange(cluster, desc(avg_log2FC))
markers <- as.data.frame(markers)
# convert into list
marker_list <- split(markers[, -c(1:7)], f = markers$cluster)
# Remove duplicates and keep only one occurrence of each element
# Remove duplicates within each vector
marker_list <- lapply(marker_list, unique)
# Subset seurat object to genes of interest -----------------------------------
# create df with genes of interest
genes <- marker_list
genes_df <- data.frame(
Values = unlist(marker_list),
Group = rep(names(marker_list), sapply(marker_list, length))
)
rownames(genes_df) <- NULL
# subset Seurat object to genes of interest
seurat_df <- P7F1@assays$RNA$data[genes_df$Values, ]
# define annotations -----------------------------------
# scale dataset
seurat_df <- seurat_df - rowMeans(seurat_df)
seurat_df <- as.data.frame(seurat_df)
# define row annotation
row_ha = rowAnnotation(Group = genes_df$Group)
# genes to mark
rows_genes_to_mark <- which(genes_df$Values %in% elements_to_find)
rows_genes_to_mark_name <- genes_df$Values[rows_genes_to_mark]
right_ha = rowAnnotation(foo = anno_mark(at = rows_genes_to_mark,
labels = rows_genes_to_mark_name))
# define colors heatmap
col_fun = colorRamp2(c(-1, 0, 1), c("#2E5A87FF", "#FCFDFEFF", "#A90C38FF"))
# plot heatmap
Cairo::CairoPDF(file.path(plot_dir, "1_P7F1_heatmap_aggregate_all.pdf"), width=5, height=6)
ht <- Heatmap(seurat_df,
cluster_columns = FALSE,
show_row_names = FALSE,
show_column_names = FALSE,
#bottom_annotation = bottom_ha,
border = TRUE,
row_split = factor(c(genes_df$Group),
levels = c('Progenitor', 'Proliferative', 'Ground', 'Differentiated', 'Neuronal', 'Apoptosis')),
#top_annotation = column_ha,
right_annotation = right_ha,
use_raster = TRUE,
raster_quality = 10,
cluster_rows = FALSE,
col = col_fun,
row_names_rot = 30
)
draw(ht)
dev.off()
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(SeuratObject)
library(SingleCellExperiment)
library(readxl)
library(data.table)
library(paletteer)
library(RColorBrewer)
library(scater)
library(scRNAseq)
#library(scRNAseq)
library(SingleR)
library(SCpubr)
options(Seurat.object.assay.version = 'v3')
# Set up environment ------------------------------------------------
base_dir <- file.path('/Volumes/Sara_PhD/scRNAseq_data')
output_dir <- file.path(base_dir, 'output/metadata/dev_muscle')
if (!dir.exists(output_dir)){dir.create(output_dir, recursive = T)}
# Load seurat object data ------------------------------------------------
P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
muscle <- readRDS(file.path(base_dir, "write/Dev_muscle_Xietal.rds"))
# Load muscle signatures (Xi et al) ------------------------------------------------
muscle_signatures_celltype <- readRDS(file.path(output_dir, '7_markers_celltype_list.rds'))
# select top 25 genes
muscle_signatures_celltype <- lapply(muscle_signatures_celltype, head, 25)
muscle_signatures_timepoint <- readRDS(file.path(output_dir, '7_markers_timepoint_list.rds'))
# select top 25 genes
muscle_signatures_timepoint <- lapply(muscle_signatures_timepoint, head, 25)
# Transform objects into single cell  ------------------------------------------------
muscle.sce <- as.SingleCellExperiment(muscle)
P3F1.sce <- as.SingleCellExperiment(P3F1)
muscle.sce
pred.FPRMS.P3F1 <- SingleR(test=P3F1.sce, ref=muscle.sce, labels=muscle.sce$celltype, genes = muscle_signatures_celltype)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(readxl)
library(writexl)
library(data.table)
library(viridis)
library(future)
library(paletteer)
library(stringr)
options(Seurat.object.assay.version = "v5")
# Set up environment ------------------------------------------------
base_dir <- file.path('/Volumes/Sara_PhD/scRNAseq_data')
Xi_dir <- file.path(base_dir, 'RMS/Xi_Cell_stem_cell_2020')
genelist_dir <- file.path(base_dir, 'list_final')
source(file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources/Plot_style_v2.R'))
# color palette
#colors populations
col_celltype <- c('#C70E7BFF', '#FC6882FF',  '#6C6C9DFF',  '#A6E000FF','#1BB6AFFF','#172869FF')
names(col_celltype) <- c('Myogenic progenitors', 'Myoblasts-myocyte', 'Skeletal mesenchymal', 'Myoblasts', 'Myocytes', 'Postnatal satellite cells')
#colors time points
col_timepoints <- c('#9E0142FF', '#D53E4FFF', '#F46D43FF', '#F46D43FF', '#FDAE61FF',  '#FEE08BFF',
'#FFFFBFFF',   '#E6F598FF', '#ABDDA4FF', '#66C2A5FF', '#3288BDFF',
c(rep('#5E4FA2FF', 4)), 'grey')
names(col_timepoints) <- c("Wk5.0", "Wk6.0" ,  "Wk6.5", "Wk7.0", "Wk7.25",  "Wk7.75" , "Wk9" ,   "Wk12",   "Wk14", "Wk17" ,  "Wk18",
"Yr7",    "Yr11",   "Yr34" ,  "Yr42", NA)
# Load data ------------------------------------------------
# load human development datasets Xi et al. 2020 Stem Cell
week5_6 <- read.table(file.path(Xi_dir, 'myogenic_datasets/week5_6/exprMatrix.tsv'), sep = '\t', header=TRUE, row.names=1)
week5_6_meta <- read.table(file.path(Xi_dir, 'myogenic_datasets/week5_6/meta.tsv'), sep = '\t', header=TRUE, row.names=1)
week5_6 <- CreateSeuratObject(counts = week5_6, project = "Xi_2020")
week5_6 <- AddMetaData(week5_6, metadata = week5_6_meta)
week6_7 <- read.table(file.path(Xi_dir, 'myogenic_datasets/week6_7/exprMatrix.tsv'), sep = '\t', header=TRUE, row.names=1)
week6_7_meta <- read.table(file.path(Xi_dir, 'myogenic_datasets/week6_7/meta.tsv'), sep = '\t', header=TRUE, row.names=1)
week6_7 <- CreateSeuratObject(counts = week6_7, project = "Xi_2020")
week6_7 <- AddMetaData(week6_7, metadata = week6_7_meta)
week7_8 <- read.table(file.path(Xi_dir, 'myogenic_datasets/week7_8/exprMatrix.tsv'), sep = '\t', header=TRUE, row.names=1)
week7_8_meta <- read.table(file.path(Xi_dir, 'myogenic_datasets/week7_8/meta.tsv'), sep = '\t', header=TRUE, row.names=1)
week7_8 <- CreateSeuratObject(counts = week7_8, project = "Xi_2020")
week7_8 <- AddMetaData(week7_8, metadata = week7_8_meta)
week9 <- read.table(file.path(Xi_dir, 'myogenic_datasets/week9/exprMatrix.tsv'), sep = '\t', header=TRUE, row.names=1)
week9_meta<- read.table(file.path(Xi_dir, 'myogenic_datasets/week9/meta.tsv'), sep = '\t', header=TRUE, row.names=1)
week9 <- CreateSeuratObject(counts = week9, project = "Xi_2020")
week9 <- AddMetaData(week9, metadata = week9_meta)
week12_14 <- read.table(file.path(Xi_dir, 'myogenic_datasets/week12_14/exprMatrix.tsv'), sep = '\t', header=TRUE, row.names=1)
week12_14_meta<- read.table(file.path(Xi_dir, 'myogenic_datasets/week12_14/meta.tsv'), sep = '\t', header=TRUE, row.names=1)
week12_14 <- CreateSeuratObject(counts = week12_14, project = "Xi_2020")
week12_14 <- AddMetaData(week12_14, metadata = week12_14_meta)
week17_18 <- read.table(file.path(Xi_dir, 'myogenic_datasets/week17_18/exprMatrix.tsv'), sep = '\t', header=TRUE, row.names=1)
week17_18_meta<- read.table(file.path(Xi_dir, 'myogenic_datasets/week17_18/meta.tsv'), sep = '\t', header=TRUE, row.names=1)
week17_18 <- CreateSeuratObject(counts = week17_18, project = "Xi_2020")
week17_18 <- AddMetaData(week17_18, metadata = week17_18_meta)
juvenile <- read.table(file.path(Xi_dir, 'myogenic_datasets/juvenile/exprMatrix.tsv'), sep = '\t', header=TRUE, row.names=1)
juvenile_meta <- read.table(file.path(Xi_dir, 'myogenic_datasets/juvenile/meta.tsv'), sep = '\t', header=TRUE, row.names=1)
juvenile <- CreateSeuratObject(counts = juvenile, project = "Xi_2020")
juvenile  <- AddMetaData(juvenile , metadata = juvenile_meta)
adult <- read.table(file.path(Xi_dir, 'myogenic_datasets/adult/exprMatrix.tsv'), sep = '\t', header=TRUE, row.names=1)
adult_meta <- read.table(file.path(Xi_dir, 'myogenic_datasets/adult/meta.tsv'), sep = '\t', header=TRUE, row.names=1)
adult <- CreateSeuratObject(counts = adult, project = "Xi_2020")
adult <- AddMetaData(adult, metadata = adult_meta)
# merge data  ------------------------------------------------
merged_Xietal <- merge(week5_6, y = list(week6_7, week7_8, week9, week12_14, week17_18, juvenile, adult),
add.cell.ids = c('week5_6', 'week6_7', 'week7_8', 'week9', 'week12_14', 'week17_18', 'juvenile', 'adult'),
project = "development_Xi_2020")
merged_Xietal <- JoinLayers(merged_Xietal)
Idents(merged_Xietal) <- 'orig.ident.short'
DefaultAssay(merged_Xietal) <- "RNA"
# Define mitochondrial genes
merged_Xietal[["percent.mt"]] <- PercentageFeatureSet(merged_Xietal, pattern = "^MT-")
# Refine metadata annotations  ------------------------------------------------
# (1) add cell type info
cellname <- colnames(merged_Xietal)
celltype <- unlist(str_split(merged_Xietal@meta.data$Cell.Type, "-", n = 1))
#create dataframe
df <- data.frame(cellname, celltype)
# add info as metadata
merged_Xietal <- AddMetaData(merged_Xietal, metadata = df)
# add average cell type (MP, MB, ecc) and time point
celltype <- c()
timepoint <- c()
# extract average cell type
cell_type <- merged_Xietal@meta.data$orig.ident.short_cell.type
# Extract the third element
for (i in 1:length(cell_type)) {
split_elements <- str_split(cell_type[i], "_", n = 3)
celltype[i] <- split_elements[[1]][3]
timepoint[i] <- split_elements[[1]][1]
}
#create dataframe
df <- data.frame(cellname, celltype, timepoint)
# add info as metadata
merged_Xietal <- AddMetaData(merged_Xietal, metadata = df)
# Rename celltype names  -----------------------------------
metadata <- merged_Xietal@meta.data
# Use dplyr's mutate to substitute specific cells with new names
metadata <- metadata %>%
mutate(celltype = case_when(
celltype == "MP" ~ "Myogenic progenitors",
celltype == "MB-MC" ~ "Myoblasts-myocyte",
celltype == "SkM.Mesen" ~ "Skeletal mesenchymal",
celltype == "MB" ~ "Myoblasts",
celltype == "MC" ~ "Myocytes",
celltype == "SC" ~ "Postnatal satellite cells"
))
# Add new metadata to Seurat objetct
merged_Xietal <- AddMetaData(merged_Xietal, metadata)
# Downstream analysis Seurat object ------------------------------------------------
## Data normalization
merged_Xietal <- NormalizeData(merged_Xietal, normalization.method = "LogNormalize", scale.factor = 10000)
## Highly variable features
merged_Xietal <- FindVariableFeatures(merged_Xietal, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(merged_Xietal), 10)
## Load signatures
Common_differentiated <- read_excel(file.path(genelist_dir, "Common_differentiated.xlsx"), col_names=FALSE)
Common_differentiated <- as.list(Common_differentiated)
Common_proliferative <- read_excel(file.path(genelist_dir,"Common_proliferative.xlsx"), col_names=FALSE)
Common_proliferative <- as.list(Common_proliferative)
Common_Stemcell <- read_excel(file.path(genelist_dir, "Common_Stemcell.xlsx"), col_names=FALSE)
Common_Stemcell <- as.list(Common_Stemcell)
signatures <- c(Common_differentiated, Common_proliferative, Common_Stemcell)
names(signatures) <- list('Differentiated score', 'Proliferative score', 'Progenitor score')
# select top 25 genes per signature
signatures <- lapply(signatures,head,25)
# Score for metaprograms  ----------------------------------
merged_Xietal <- AddModuleScore(object = merged_Xietal, assay = 'RNA', features = signatures, name = names(signatures))
merged_Xietal <- ScaleData(merged_Xietal)
# rename metadata names of scores
col_start <- length(colnames(merged_Xietal@meta.data)) - length(names(signatures)) + 1
# identify number of last column with metadata scores
col_end <- length(colnames(merged_Xietal@meta.data))
# rename columns with score name
colnames(merged_Xietal@meta.data)[col_start:col_end] <- names(signatures)
## Dimension reduction
merged_Xietal
merged_Xietal <- RunPCA(merged_Xietal, reduction.name = "pca_no_regression", reduction.key = "pca_no_regression")
# reorder labels
merged_Xietal$timepoint <- factor(x = merged_Xietal$timepoint,
levels = c("Wk5.0", "Wk6.0" ,  "Wk6.5", "Wk7.0", "Wk7.25",  "Wk7.75" , "Wk9" ,   "Wk12",   "Wk14", "Wk17" ,  "Wk18",
"Yr7",    "Yr11",   "Yr34" ,  "Yr42"))
merged_Xietal$celltype <- factor(x = merged_Xietal$celltype,
levels = c("Myogenic progenitors", "Myoblasts-myocyte", "Myoblasts",  "Myocytes",
"Skeletal mesenchymal",  "Postnatal satellite cells"))
# Plot PCA
DimPlot(merged_Xietal, reduction = "pca_no_regression", group.by = 'celltype', cols = col_celltype) + NoAxes()
ggsave("/Volumes/Sara_PhD/scRNAseq_data/output/metadata/dev_muscle/1_PCA_celltype.pdf",
width=10, height=5, dpi=300)
ElbowPlot(merged_Xietal, reduction='pca_no_regression')
ggsave("/Volumes/Sara_PhD/scRNAseq_data/output/metadata/dev_muscle/2_Elbowplot.pdf",
width=6, height=4, dpi=300)
# Cluster cells
merged_Xietal <- FindNeighbors(merged_Xietal, reduction = 'pca_no_regression', dims = 1:10)
# Plot UMAP
merged_Xietal <- RunUMAP(merged_Xietal, dims = 1:10, reduction = 'pca_no_regression', reduction.name = 'UMAP_no_regression')
# save object  ------------------------------------------------------------
saveRDS(merged_Xietal, file = "/Volumes/Sara_PhD/scRNAseq_data/write/Dev_muscle_Xietal.rds")
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(SeuratObject)
library(SingleCellExperiment)
library(readxl)
library(data.table)
library(paletteer)
library(RColorBrewer)
library(scater)
#library(scRNAseq)
library(SingleR)
library(SCpubr)
#options(Seurat.object.assay.version = 'v3')
# Set up environment ------------------------------------------------
base_dir <- file.path('/Volumes/Sara_PhD/scRNAseq_data')
output_dir <- file.path(base_dir, 'output/metadata/dev_muscle')
if (!dir.exists(output_dir)){dir.create(output_dir, recursive = T)}
# Load seurat object data ------------------------------------------------
P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
muscle <- readRDS(file.path(base_dir, "write/Dev_muscle_Xietal.rds"))
# Load muscle signatures (Xi et al) ------------------------------------------------
muscle_signatures_celltype <- readRDS(file.path(output_dir, '7_markers_celltype_list.rds'))
# select top 25 genes
muscle_signatures_celltype <- lapply(muscle_signatures_celltype, head, 25)
muscle_signatures_timepoint <- readRDS(file.path(output_dir, '7_markers_timepoint_list.rds'))
# select top 25 genes
muscle_signatures_timepoint <- lapply(muscle_signatures_timepoint, head, 25)
# Transform objects into single cell  ------------------------------------------------
muscle.sce <- as.SingleCellExperiment(muscle)
P3F1.sce <- as.SingleCellExperiment(P3F1)
pred.FPRMS.P3F1 <- SingleR(test=P3F1.sce, ref=muscle.sce, labels=muscle.sce$celltype, genes = muscle_signatures_celltype)
prop.table(table(pred.FPRMS.P3F1$labels))*100
P3F1[["SingleR.labels"]] <- pred.FPRMS.P3F1$labels
unique(P3F1$SingleR.labels)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(SeuratObject)
library(SingleCellExperiment)
library(readxl)
library(data.table)
library(paletteer)
library(RColorBrewer)
library(scater)
#library(scRNAseq)
library(SingleR)
library(SCpubr)
#options(Seurat.object.assay.version = 'v3')
# Set up environment ------------------------------------------------
base_dir <- file.path('/Volumes/Sara_PhD/scRNAseq_data')
output_dir <- file.path(base_dir, 'output/metadata/dev_muscle')
if (!dir.exists(output_dir)){dir.create(output_dir, recursive = T)}
source(file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources/Plot_style_v2.R'))
# color palette
#colors populations
col_celltype <- c('#C70E7BFF', '#FC6882FF',  '#6C6C9DFF',  '#A6E000FF','#1BB6AFFF','#172869FF')
names(col_celltype) <- c('Myogenic progenitors', 'Myoblasts-myocyte', 'Skeletal mesenchymal', 'Myoblasts', 'Myocytes', 'Postnatal satellite cells')
#colors time points
col_timepoints <- c('#9E0142FF', '#D53E4FFF', '#F46D43FF', '#F46D43FF', '#FDAE61FF',  '#FEE08BFF',
'#FFFFBFFF',   '#E6F598FF', '#ABDDA4FF', '#66C2A5FF', '#3288BDFF',
c(rep('#5E4FA2FF', 4)), 'grey')
names(col_timepoints) <- c("Wk5.0", "Wk6.0" ,  "Wk6.5", "Wk7.0", "Wk7.25",  "Wk7.75" , "Wk9" ,   "Wk12",   "Wk14", "Wk17" ,  "Wk18",
"Yr7",    "Yr11",   "Yr34" ,  "Yr42", NA)
# Load seurat object data ------------------------------------------------
P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
P7F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX7FOXO1_final_20240130.rds"))
ERMS <- readRDS(file.path(base_dir, "write/ERMS_final_20240130.rds"))
seurat_objects <- c(P3F1, P7F1, ERMS)
names(seurat_objects) <- c('P3F1', 'P7F1', 'FNRMS')
muscle <- readRDS(file.path(base_dir, "write/Dev_muscle_Xietal.rds"))
ERMS <- readRDS(file.path(base_dir, "write/FNRMS_final_20240130.rds"))
seurat_objects <- c(P3F1, P7F1, ERMS)
names(seurat_objects) <- c('P3F1', 'P7F1', 'FNRMS')
rm(P3F1, P7F1, ERMS)
muscle <- readRDS(file.path(base_dir, "write/Dev_muscle_Xietal.rds"))
# Load muscle signatures (Xi et al) ------------------------------------------------
muscle_signatures_celltype <- readRDS(file.path(output_dir, '7_markers_celltype_list.rds'))
# select top 25 genes
muscle_signatures_celltype <- lapply(muscle_signatures_celltype, head, 25)
muscle_signatures_timepoint <- readRDS(file.path(output_dir, '7_markers_timepoint_list.rds'))
# select top 25 genes
muscle_signatures_timepoint <- lapply(muscle_signatures_timepoint, head, 25)
# Transform objects into single cell  ------------------------------------------------
muscle.sce <- as.SingleCellExperiment(muscle)
P3F1.sce <- as.SingleCellExperiment(P3F1)
sc_objects <- list()
for (i in seq_along(sc_objects)) {
sc_objects[[i]] <- as.SingleCellExperiment(seurat_objects[[i]])
}
names(sc_objects) <- names(seurat_objects)
seq_along(sc_objects)
for (i in seq_along(seurat_objects)) {
sc_objects[[i]] <- as.SingleCellExperiment(seurat_objects[[i]])
}
names(sc_objects) <- names(seurat_objects)
# Transfer muscle time labels onto RMS tumors ------------------------------------------------
pred.labels <- list()
prop.table <- list()
for (i in seq_along(sc_objects)) {
# use SingleR to transfer labels
pred.labels[[i]] <- SingleR(test=sc_objects[[i]], ref=muscle.sce, labels=muscle.sce$celltype, genes = muscle_signatures_timepoint)
prop.table[[i]](table(pred.labels[[i]]$labels))*100
write.csv(prop.table[[i]], file.path(output_dir, paste0("0_, ", names(sc_objects)[i], "_prediction.csv")))
}
for (i in seq_along(sc_objects)) {
# use SingleR to transfer labels
pred.labels[[i]] <- SingleR(test=sc_objects[[i]], ref=muscle.sce, labels=muscle.sce$timepoint, genes = muscle_signatures_timepoint)
prop.table[[i]](table(pred.labels[[i]]$labels))*100
write.csv(prop.table[[i]], file.path(output_dir, paste0("0_, ", names(sc_objects)[i], "_prediction.csv")))
}
pred.labels
i=1
table(pred.labels[[i]]$labels))*100
(table(pred.labels[[i]]$labels))*100
pred.labels[[i]]$labels
table(pred.labels[[i]]$labels)
prop.table[[i]] <- table(pred.labels[[i]]$labels)
write.csv(prop.table[[i]], file.path(output_dir, paste0("0_, ", names(sc_objects)[i], "_prediction.csv")))
# Transfer muscle time labels onto RMS tumors ------------------------------------------------
pred.labels <- list()
prop.table <- list()
for (i in seq_along(sc_objects)) {
# use SingleR to transfer labels
pred.labels[[i]] <- SingleR(test=sc_objects[[i]], ref=muscle.sce, labels=muscle.sce$timepoint, genes = muscle_signatures_timepoint)
prop.table[[i]] <- table(pred.labels[[i]]$labels)
write.csv(prop.table[[i]], file.path(output_dir, paste0("0_, ", names(sc_objects)[i], "_prediction.csv")))
}
i=1
table(pred.labels[[i]]$labels)
for (i in seq_along(sc_objects)) {
pdf(file.path(output_dir, paste0("1_, ", names(sc_objects)[i], "_score_heatmap.pdf")), width=9, height=5)
print(plotScoreHeatmap(pred.labels[[i]], order.by='label'))
dev.off()
}
sc_objects
names(sc_objects)[i]
for (i in seq_along(sc_objects)) {
# use SingleR to transfer labels
pred.labels[[i]] <- SingleR(test=sc_objects[[i]], ref=muscle.sce, labels=muscle.sce$timepoint, genes = muscle_signatures_timepoint)
#prop.table[[i]] <- table(pred.labels[[i]]$labels) %>% mutate(freq = n/)
#write.csv(prop.table[[i]], file.path(output_dir, paste0("0_", names(sc_objects)[i], "_prediction.csv")))
pdf(file.path(output_dir, paste0("1_", names(sc_objects)[i], "_score_heatmap.pdf")), width=9, height=5)
print(plotScoreHeatmap(pred.labels[[i]], order.by='label'))
dev.off()
}
rm(list = ls())
# Load packages -----------------------------------
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(SeuratObject)
library(data.table)
library(tidyverse)
library(clusterProfiler)
library(ggpubr)
library(cowplot)
library(enrichplot)
library(msigdbr)
library(readxl)
library(org.Hs.eg.db)
# Organize environment  -----------------------------------
# base directory
base_dir <- file.path('/Volumes/Sara_PhD/scRNAseq_data')
# Create directories to store results
plot_dir <- file.path(base_dir, "output/metadata/Patel_Danielli_Langenau/RPCA_name/Pseudobulk")
if (!dir.exists(plot_dir)){dir.create(plot_dir, recursive = T)}
# script directory
script_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata')
# Create directories to store results
plot_dir <- file.path(base_dir, "output/metadata/Patel_Danielli_Langenau/RPCA_name/Pseudobulk")
if (!dir.exists(plot_dir)){dir.create(plot_dir, recursive = T)}
resource_dir <- file.path(base_dir, 'scripts/Resources')
#source(file.path(resource_dir, "Color_palette.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
resource_dir <- file.path(script_dir, 'Resources')
#source(file.path(resource_dir, "Color_palette.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
# load Seurat object -----------------------------------
P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
head(P3F1@meta.data)
Idents(P3F1) <- 'Cluster assignment'
metaprograms <- unique(P3F1$Cluster assignment)
metaprograms <- unique(P3F1$`Cluster assignment`)
metaprograms
# Order factors
desired_order <- ('Progenitor', 'Proliferative', 'Ground', 'Differentiated', 'Neuronal', 'Apoptosis')
metaprograms <- metaprograms[match(desired_order, metaprograms)]
# Order factors
desired_order <- c('Progenitor', 'Proliferative', 'Ground', 'Differentiated', 'Neuronal', 'Apoptosis')
metaprograms <- metaprograms[match(desired_order, metaprograms)]
head(P3F1@meta.data)
# First identify markers differentially expressed across clusters
Idents(seurat_obj) <- 'status'
# First identify markers differentially expressed across clusters
Idents(P3F1) <- 'status'
Idents(P3F1)
# load Seurat object -----------------------------------
#P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
#P7F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX7FOXO1_final_20240130.rds"))
ERMS <- readRDS(file.path(base_dir, "write/FNRMS_final_20240130.rds"))
Idents(ERMS) <- 'Cluster assignment'
metaprograms <- unique(ERMS$`Cluster assignment`)
