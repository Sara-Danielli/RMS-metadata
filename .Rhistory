ggsave(file.path(analysis_dir,"21_Clustree_res_01_1.pdf"), width=7, height=6, dpi=300)
ggsave(file.path(analysis_dir,"21_Clustree_res_01_1.pdf"), width=8, height=8, dpi=300)
ggsave(file.path(analysis_dir,"21_Clustree_res_01_1.pdf"), width=8, height=10, dpi=300)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(readxl)
library(writexl)
library(data.table)
library(viridis)
library(future)
library(paletteer)
library(SeuratObject)
library(SCpubr)
library(readxl)
library(ggpubr)
library(cowplot)
base_dir <- '/Volumes/Sara_PhD/scRNAseq_data'
resource_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources')
source(file.path(base_dir, "codes/MANUSCRIPT_INTEGRATION/metadata/FINAL/Functions.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
analysis_dir <- file.path(base_dir, 'output/metadata/Patel_Danielli_Langenau/RPCA_name/P3F1analysis')
if (!dir.exists(analysis_dir)){dir.create(analysis_dir, recursive = T)}
P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
# Dotplot scores of myogenic markers
myogenic_genes <- c('MYOD1', 'MYOG', 'DES')
DotPlot(P3F1,
features = myogenic_genes,
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = FALSE,
col.min = 0)  +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
DotPlot(P3F1,
)
DotPlot(P3F1,
features = myogenic_genes,
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = FALSE,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
DotPlot(P3F1,
features = myogenic_genes,
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = FALSE,
col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
DotPlot(P3F1,
features = myogenic_genes,
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = T,
col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
DotPlot(P3F1,
features = myogenic_genes,
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = T,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
DotPlot(P3F1,
features = myogenic_genes,
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("22_DotPlot_myogenic.pdf")), width=5.5, height=4.5, dpi=300)
ggsave(file.path(analysis_dir, paste0("22_DotPlot_myogenic.pdf")), width=4.5, height=4.5, dpi=300)
ggsave(file.path(analysis_dir, paste0("22_DotPlot_myogenic.pdf")), width=4.5, height=4, dpi=300)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(readxl)
library(writexl)
library(data.table)
library(viridis)
library(future)
library(paletteer)
library(SeuratObject)
library(SCpubr)
library(readxl)
base_dir <- '/Volumes/Sara_PhD/scRNAseq_data'
resource_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources')
source(file.path(base_dir, "codes/MANUSCRIPT_INTEGRATION/metadata/FINAL/Functions.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
analysis_dir <- file.path(base_dir, 'output/metadata/Patel_Danielli_Langenau/RPCA_name/P7F1analysis')
if (!dir.exists(analysis_dir)){dir.create(analysis_dir, recursive = T)}
P7F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX7FOXO1_final_20240130.rds"))
# Dotplot scores of myogenic markers
myogenic_genes <- c('MYOD1', 'MYOG', 'DES')
DotPlot(P3F1,
features = myogenic_genes,
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
DotPlot(P7F1,
features = myogenic_genes,
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("22_DotPlot_myogenic.pdf")), width=4.5, height=4, dpi=300)
ggsave(file.path(analysis_dir, paste0("22_DotPlot_myogenic.pdf")), width=4.5, height=3.5, dpi=300)
FP_signature <- read_excel(file.path(base_dir, 'list_final/Wei_2022/FP.xlsx'))
FP_signature
FP_signature <- as.list(FP_signature)
FP_signature
?read_excel
FP_signature <- read_excel(file.path(base_dir, 'list_final/Wei_2022/FP.xlsx'), col_names = F)
FP_signature
FP_signature <- as.list(FP_signature)
FP_signature
names(FP_signature) <- 'FP signature'
FP_signature
# Score tumor programs for gene expression programs identified in Xi et al. --------------------
P7F1 <- AddModuleScore(object = P7F1, assay = 'RNA', features = FP_signature, name = names(FP_signature))
P7F1 <- ScaleData(P7F1)
# rename metadata names of scores
col_start <- list()
col_end <- list()
for (i in seq_along(FP_signature)){
# identify number of first column with metadata scores
col_start[[i]] <- length(colnames(FP_signature[[i]]@meta.data)) - length(names(muscle_signatures)) +1
# identify number of last column with metadata scores
col_end[[i]] <- length(colnames(FP_signature[[i]]@meta.data))
# rename columns with score name
colnames(FP_signature[[i]]@meta.data)[col_start[[i]]:col_end[[i]]] <- names(muscle_signatures)
}
for (i in seq_along(FP_signature)){
# identify number of first column with metadata scores
col_start[[i]] <- length(colnames(FP_signature[[i]]@meta.data)) - length(names(FP_signature)) +1
# identify number of last column with metadata scores
col_end[[i]] <- length(colnames(FP_signature[[i]]@meta.data))
# rename columns with score name
colnames(FP_signature[[i]]@meta.data)[col_start[[i]]:col_end[[i]]] <- names(FP_signature)
}
seq_along(FP_signature)
head(FP_signature@me)
for (i in seq_along(FP_signature)){
# identify number of first column with metadata scores
col_start[[i]] <- length(colnames(P7F1[[i]]@meta.data)) - length(names(FP_signature)) + 1
# identify number of last column with metadata scores
col_end[[i]] <- length(colnames(P7F1[[i]]@meta.data))
# rename columns with score name
colnames(P7F1[[i]]@meta.data)[col_start[[i]]:col_end[[i]]] <- names(FP_signature)
}
head(FP_signature@met)
colnames(P7F1[[i]]@meta.data)
P7F1
# rename metadata names of scores
col_start <- list()
col_end <- list()
for (i in seq_along(FP_signature)){
# identify number of first column with metadata scores
col_start[[i]] <- length(colnames(P7F1[[i]]@meta.data)) - length(names(FP_signature)) + 1
# identify number of last column with metadata scores
col_end[[i]] <- length(colnames(P7F1[[i]]@meta.data))
# rename columns with score name
colnames(P7F1[[i]]@meta.data)[col_start[[i]]:col_end[[i]]] <- names(FP_signature)
}
P7F1[[i]]@meta.data
# rename metadata names of scores
col_start <- length(colnames(P7F1@meta.data)) - length(names(FP_signature)) + 1
# identify number of last column with metadata scores
col_end <- length(colnames(P7F1@meta.data))
# rename columns with score name
colnames(P7F1@meta.data)[col_start:col_end] <- names(FP_signature)
P7F1[[i]]@meta.data
colnames(P7F1@meta.data)
# Dotplot scores of FP signature
DotPlot(P7F1,
features = "FP signature",
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("23_DotPlot_FPsignature.pdf")), width=4.5, height=3.5, dpi=300)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(readxl)
library(writexl)
library(data.table)
library(viridis)
library(future)
library(paletteer)
library(SeuratObject)
library(SCpubr)
library(readxl)
library(ggpubr)
library(cowplot)
base_dir <- '/Volumes/Sara_PhD/scRNAseq_data'
resource_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources')
source(file.path(base_dir, "codes/MANUSCRIPT_INTEGRATION/metadata/FINAL/Functions.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
analysis_dir <- file.path(base_dir, 'output/metadata/Patel_Danielli_Langenau/RPCA_name/P3F1analysis')
if (!dir.exists(analysis_dir)){dir.create(analysis_dir, recursive = T)}
P3F1 <- readRDS(file.path(base_dir, "write/FPRMS_PAX3FOXO1_final_20240130.rds"))
# Scoring tumors for FP-RMS signature ------------------------------------------------
# read gene list (Fusion positive signature of Wei et al)
FP_signature <- read_excel(file.path(base_dir, 'list_final/Wei_2022/FP.xlsx'), col_names = F)
FP_signature <- as.list(FP_signature)
names(FP_signature) <- 'FP signature'
# read gene list (Fusion positive signature of Gryder et al 2020)
# Score tumor programs for gene expression programs identified in Xi et al. --------------------
P3F1 <- AddModuleScore(object = P3F1, assay = 'RNA', features = FP_signature, name = names(FP_signature))
P3F1 <- ScaleData(P3F1)
# rename metadata names of scores
col_start <- length(colnames(P3F1@meta.data)) - length(names(FP_signature)) + 1
# identify number of last column with metadata scores
col_end <- length(colnames(P3F1@meta.data))
# rename columns with score name
colnames(P3F1@meta.data)[col_start:col_end] <- names(FP_signature)
# Dotplot scores of FP signature
DotPlot(P3F1,
features = "FP signature",
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("23_DotPlot_FPsignature.pdf")), width=4.5, height=3.5, dpi=300)
rm(list = ls())
library(dplyr)
library(Seurat)
library(ggplot2)
library(patchwork)
library(readxl)
library(writexl)
library(data.table)
library(viridis)
library(future)
library(paletteer)
library(SeuratObject)
library(SCpubr)
library(readxl)
library(clustree)
base_dir <- '/Volumes/Sara_PhD/scRNAseq_data'
list_dir <- '/Volumes/Sara_PhD/scRNAseq_data/list_final'
#base_dir <- "/n/scratch3/users/s/sad167/metadata"
source(file.path(base_dir, "codes/MANUSCRIPT_INTEGRATION/metadata/FINAL/Functions.R"))
analysis_dir <- file.path(base_dir, 'output/metadata/Patel_Danielli_Langenau/RPCA_name/analysis')
if (!dir.exists(analysis_dir)){dir.create(analysis_dir, recursive = T)}
_
RMS.integrated <- readRDS(file.path(base_dir, "write/RMS_atlas_final_20240130.rds"))
head(PDX.integrated@meta.data)
head(RMS.integrated@meta.data)
# Vln plot progenitor/differentiated scores for each population ------------------------------------------
DotPlot(RMS.integrated,
features = c("Progenitor score", "Differentiated score"),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
ggsave(file.path(analysis_dir, paste0("22_DotPlot_Progenitor_differentiated_score.pdf")), width=4.5, height=3.5, dpi=300)
ggsave(file.path(analysis_dir, paste0("22_DotPlot_Progenitor_differentiated_score.pdf")), width=4.5, height=5, dpi=300)
VlnPlot(RMS.integrated,
features = c("Progenitor score", "Differentiated score"),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
VlnPlot(RMS.integrated,
features = c("Progenitor score", "Differentiated score"),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = c("white", "red3"),
#scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
VlnPlot(RMS.integrated,
features = c("Progenitor score", "Differentiated score"),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = col_cluster_names_aggregate,
#scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
# Color subtype
col_subtype <- c('#D3A2C2FF', '#95CECFFF')
col_fusion <- c('#D3A2C2FF', '#D3A2C2FF', '#95CECFFF', 'darkblue')
# Color Louvain clusters
col_cluster_names =  paletteer::paletteer_d("rcartocolor::Pastel", n = 12)
col_cluster_names_aggregate <- c("#276419FF","#7FBC41FF", '#FFAD72FF', '#FFE5CCFF', "#DE77AEFF", "#8E0152FF", '#D8D8E0FF')
VlnPlot(RMS.integrated,
features = c("Progenitor score", "Differentiated score"),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = col_cluster_names_aggregate,
#scale = F,
#col.min = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
VlnPlot(RMS.integrated,
features = c("Progenitor score", "Differentiated score"),
group.by = 'Cluster assignment',
assay = 'RNA',
cols = col_cluster_names_aggregate,
pt.size = 0
) +
#scale_colour_distiller(palette="RdBu") +
theme(axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=12, angle = 90, vjust = 0.5, hjust=1, colour="black"),
axis.text.y = element_text(size=12, colour="black"),
axis.title=element_blank(),
legend.text = element_text(size = 12),
#legend.title = element_blank()
)
scores <- c("Progenitor score", "Differentiated score")
titles <- c("Progenitor score", "Differentiated score")
p <- VlnPlot(RMS.integrated, features = scores, group.by = 'Cluster assignment', combine = FALSE, pt.size=0, cols = col_model)
for(i in 1:length(p)) {
p[[i]] <- p[[i]] + NoLegend() +
labs (y='Module score, AU', x='', title = titles[[i]]) +
scale_fill_manual(values = col_model) +
geom_boxplot(outlier.shape=NA, width=0.1, fill="white") +
stat_compare_means(aes(label = after_stat(p.signif)),
method = 't.test',
size = 5,
label.y.npc = 0.95,
label.x.npc = 0.5,
) + NoLegend() +
theme_vln
}
p[[i]] <- p[[i]] + NoLegend() +
labs (y='Module score, AU', x='', title = titles[[i]]) +
scale_fill_manual(values = col_cluster_names_aggregate) +
geom_boxplot(outlier.shape=NA, width=0.1, fill="white")
for(i in 1:length(p)) {
p[[i]] <- p[[i]] + NoLegend() +
labs (y='Module score, AU', x='', title = titles[[i]]) +
scale_fill_manual(values = col_cluster_names_aggregate) +
geom_boxplot(outlier.shape=NA, width=0.1, fill="white")
) + NoLegend() +
for(i in 1:length(p)) {
p[[i]] <- p[[i]] + NoLegend() +
labs (y='Module score, AU', x='', title = titles[[i]]) +
scale_fill_manual(values = col_cluster_names_aggregate) +
geom_boxplot(outlier.shape=NA, width=0.1, fill="white") + NoLegend() +
theme_vln
}
resource_dir <- file.path('/Users/sdaniell/Dropbox (Partners HealthCare)/Sara Danielli/Manuscripts/2023 - Meta-data/GITHUB/RMS-metadata/Resources')
source(file.path(base_dir, "codes/MANUSCRIPT_INTEGRATION/metadata/FINAL/Functions.R"))
source(file.path(resource_dir, "Plot_style_v2.R"))
for(i in 1:length(p)) {
p[[i]] <- p[[i]] + NoLegend() +
labs (y='Module score, AU', x='', title = titles[[i]]) +
scale_fill_manual(values = col_cluster_names_aggregate) +
geom_boxplot(outlier.shape=NA, width=0.1, fill="white") + NoLegend() +
theme_vln
}
plot_grid(plotlist = p, ncol=2)
library(cowplot)
plot_grid(plotlist = p, ncol=2)
ggsave(file.path(analysis_dir, paste0("23_VlnPlot_Progenitor_differentiated_score.pdf")), width=10, height=5, dpi=300)
for(i in 1:length(p)) {
p[[i]] <- p[[i]] + NoLegend() +
labs (y='Module score, AU', x='', title = titles[[i]]) +
scale_fill_manual(values = col_cluster_names_aggregate_integrated) +
geom_boxplot(outlier.shape=NA, width=0.1, fill="white") + NoLegend() +
theme_vln
}
plot_grid(plotlist = p, ncol=2)
ggsave(file.path(analysis_dir, paste0("23_VlnPlot_Progenitor_differentiated_score.pdf")), width=10, height=5, dpi=300)
ggsave(file.path(analysis_dir, paste0("23_VlnPlot_Progenitor_differentiated_score.pdf")), width=8, height=6, dpi=300)
ggsave(file.path(analysis_dir, paste0("23_VlnPlot_Progenitor_differentiated_score.pdf")), width=8, height=5, dpi=300)
